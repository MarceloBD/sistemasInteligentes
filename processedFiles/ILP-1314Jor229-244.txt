Integrity
Constraints
Using
Monte
Carlo
Approach
Al–Ωpio
Jorge
Pavel
Brazdil
LIACC-University
Porto
Campo
Alegre
4150
PORTO
PORTUGAL
email
amjorge
pbrazdil@ncc.up.pt
http://www.up.pt/liacc/ML
Abstract
Many
state-of-the-art
systems
require
large
numbers
negative
examples
avoid
overgeneralization
This
considerable
disadvantage
many
applications
namely
inductive
program
synthesis
where
relativelly
small
sparse
example
sets
more
realistic
scenario
Integrity
constraints
first
order
clauses
that
play
role
negative
examples
inductive
process
integrity
constraint
replace
long
list
ground
negative
examples
However
checking
consistency
program
with
integrity
constraints
usually
involves
heavy
theorem-proving
propose
efficient
constraint
satisfaction
algorithm
that
applies
wide
variety
useful
integrity
constraints
uses
Monte
Carlo
strategy
looks
inconsistencies
random
generation
queries
program
This
method
allows
integrity
constraints
instead
together
with
negative
examples
consequence
programs
induce
specified
more
rapidly
user
system
tends
obtain
more
accurate
definitions
Average
running
times
greatly
affected
integrity
constraints
compared
ground
negative
examples
References
Lapointe
Ling
Matwin
1994
Inverting
Implication
with
Small
Training
Sets
Proceedings
European
Conference
Machine
Learning
ECML
Bergadano
Raedt
Springer
Verlag
Bergadano
Gunneti
Trinchero
1993
Difficulties
Learning
Logic
Programs
with
Journal
Artificial
Intelligence
Research
91-107
Access
Foundation
Morgan
Kaufmann
Publishers
Brazdil
Jorge
1994
Learning
Refining
Algorithm
Sketches
Proceedings
ECAI-94
Cohn
Wiley
Raedt
Lavrac
Dzeroski
1993
Multiple
Predicate
Learning
Proceedings
IJCAI-93
Morgan-Kaufmann
Raedt
1992
Interactive
Theory
Revision:An
Inductive
Logic
Programming
Approach
Academic
Press
Deville
K.,(1994
Logic
Program
Synthesis
Journal
Logic
Programming
special
issue
Years
Logic
Programming
volumes
19,20
May/July
1994
Hogger
1990
Essentials
Logic
Programming
Graduate
texts
computer
science
series
Oxford
University
Press
Idestam-Almquist
1996
Efficient
Induction
Recursive
Definitions
Efficient
Analysis
Saturations
Advances
Inductive
Logic
Programming
Raedt
Press/Ohmsha
Jorge
Brazdil
1996
Architecture
Iterative
Learning
Recursive
Definitions
Advances
Inductive
Logic
Programming
Raedt
Press/Ohmsha
Lavrac
Dzeroski
1994
Inductive
Logic
Programming
Techniques
Applications
Ellis
Horwood
Manthey
1988
SATCHMO
theorem
prover
implemented
Prolog
Proceedings
CADE
Conference
Automated
Deduction),Springer
Verlag
Muggleton
Raedt
1994
Inductive
Logic
Programming
Journal
Logic
Programming
Special
issue
Years
Logic
Programming
volumes
19,20
May/July
1994
Muggleton
1995
Stochastic
Logic
Programs
Advances
Inductive
Logic
Programming
Raedt
Press/Ohmsha
Muggleton
1993
Inductive
Logic
Programming
derivations
successes
shortcomings
Proceedings
ECML
Springer-Verlag
Quinlan
1990
Learning
logical
definitions
from
relations
Machine
Learning
239-266
Quinlan
1993
FOIL
Midterm
Report
Proceedings
ECML-93
Springer-Verlag
Quinlan
1996
Learning
First-Order
Definitions
Functions
Journal
Artificial
Intelligence
Research
appear
Sadri
Kowaiski
1988
Theorem
Proving
Approach
Database
Integrity
Deductive
Databases
Logic
Programming
Jack
Minker
Morgan
Kaufmann
Publishers
Shapiro
1982
Algorithmic
Program
Debugging
Press
Cambridge
Zelle
Mooney
Konvisser
1994
Combining
Top-down
Bottom-up
Techniques
Inductive
Logic
Programming
Proceedings
Eleventh
International
Conference
Machine
Learning
ML-94
Morgan-Kaufmann