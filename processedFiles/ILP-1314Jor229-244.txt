integrity
constraints
using
monte
carlo
approach
alpio
jorge
pavel
brazdil
liacc
university
porto
campo
alegre
porto
portugal
email
amjorge
pbrazdil
http
liacc
abstract
many
state
systems
require
large
numbers
negative
examples
avoid
overgeneralization
this
considerable
disadvantage
many
applications
namely
inductive
program
synthesis
where
relativelly
small
sparse
example
sets
more
realistic
scenario
integrity
constraints
first
order
clauses
that
play
role
negative
examples
inductive
process
integrity
constraint
replace
long
list
ground
negative
examples
however
checking
consistency
program
with
integrity
constraints
usually
involves
heavy
theorem
proving
propose
efficient
constraint
satisfaction
algorithm
that
applies
wide
variety
useful
integrity
constraints
uses
monte
carlo
strategy
looks
inconsistencies
random
generation
queries
program
this
method
allows
integrity
constraints
instead
together
with
negative
examples
consequence
programs
induce
specified
more
rapidly
user
system
tends
obtain
more
accurate
definitions
average
running
times
greatly
affected
integrity
constraints
compared
ground
negative
examples
references
lapointe
ling
matwin
inverting
implication
with
small
training
sets
proceedings
european
conference
machine
learning
ecml
bergadano
raedt
springer
verlag
bergadano
gunneti
trinchero
difficulties
learning
logic
programs
with
journal
artificial
intelligence
research
access
foundation
morgan
kaufmann
publishers
brazdil
jorge
learning
refining
algorithm
sketches
proceedings
ecai
cohn
wiley
raedt
lavrac
dzeroski
multiple
predicate
learning
proceedings
ijcai
morgan
kaufmann
raedt
interactive
theory
revision
inductive
logic
programming
approach
academic
press
deville
logic
program
synthesis
journal
logic
programming
special
issue
years
logic
programming
volumes
july
hogger
essentials
logic
programming
graduate
texts
computer
science
series
oxford
university
press
idestam
almquist
efficient
induction
recursive
definitions
efficient
analysis
saturations
advances
inductive
logic
programming
raedt
press
ohmsha
jorge
brazdil
architecture
iterative
learning
recursive
definitions
advances
inductive
logic
programming
raedt
press
ohmsha
lavrac
dzeroski
inductive
logic
programming
techniques
applications
ellis
horwood
manthey
satchmo
theorem
prover
implemented
prolog
proceedings
cade
conference
automated
deduction
springer
verlag
muggleton
raedt
inductive
logic
programming
journal
logic
programming
special
issue
years
logic
programming
volumes
july
muggleton
stochastic
logic
programs
advances
inductive
logic
programming
raedt
press
ohmsha
muggleton
inductive
logic
programming
derivations
successes
shortcomings
proceedings
ecml
springer
verlag
quinlan
learning
logical
definitions
from
relations
machine
learning
quinlan
foil
midterm
report
proceedings
ecml
springer
verlag
quinlan
learning
first
order
definitions
functions
journal
artificial
intelligence
research
appear
sadri
kowaiski
theorem
proving
approach
database
integrity
deductive
databases
logic
programming
jack
minker
morgan
kaufmann
publishers
shapiro
algorithmic
program
debugging
press
cambridge
zelle
mooney
konvisser
combining
down
bottom
techniques
inductive
logic
programming
proceedings
eleventh
international
conference
machine
learning
morgan
kaufmann