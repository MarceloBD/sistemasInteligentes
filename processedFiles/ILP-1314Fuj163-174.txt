Design
Implementation
Progol
Bottom-Up
Computation
Hiroshi
FUJITA1
Naoki
YAGI2
Tomonobu
OZAKI2
Koichi
FURUKAWA2
Kyushu
University
Kasuga
Fukuoka
JAPAN
Keio
University
Fujisawa
Kanagawa
JAPAN
Abstract
This
paper
describes
parallel
version
Progol
based
MGTP
which
theorem
prover
employing
bottom-up
inference
suitable
parallel
implementation
Hypothesis
formation
Progol
which
performed
top-down
computation
with
Prolog
sequential
implementation
will
performed
more
efficiently
bottom-up
compu
tation
with
MGTP
implementation
Progol’s
general-to-specific
search
hypotheses
though
subsumption
lattice
developed
calculating
heuristic
function
A*-like
algorithm
which
also
implemented
with
MGTP
Since
MGTP
already
very
efficient
parallel
implementations
parallel
inference
machines
efficient
implementation
parallel-Progol
will
readily
realized
well
References
BR91
Beeri
Ramakrishnan
Power
Magic
Logic
Programming
Vol.10
1991
255—299
FH91
Fujita
Hasegawa
Model
Generation
Theorem
Prover
Using
Ramified-Stack
Algorithm
Proc
ICLP
1991
535—548
MB88
Manthey
SATCHMO
theorem
prover
implemented
Prolog
Proc
CADE
1988
415—434
Mug95
Muggleton
Inverse
Entailment
Progol
Generation
Computing
Vol.13
1995
245—286
UC9O
Ueda
Chikayama
Design
kernel
language
parallel
inference
machine
Computer
Journal
33(6
1990
494—500
Yag96
Yagi
Construction
parallel
Model
Master’s
thesis
Keio
University
1996